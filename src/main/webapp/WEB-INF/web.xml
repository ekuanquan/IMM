<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<display-name>Archetype Created Web Application</display-name>
	<!-- spring配置文件目录 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/ApplicationContext/*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 编码过滤器 开始 -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>com.znyw.listener.EncodingFilter</filter-class>
		<init-param>
			<param-name>charset</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 编码过滤器 结束 -->

	<!-- 用户信息获取过滤器 开始 -->
	<filter>
		<filter-name>set log4j MDC for log2userId</filter-name>
		<filter-class>com.znyw.listener.UserFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>set log4j MDC for log2userId</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 用户信息获取滤器 结束 -->

	 <!-- 单点登录配置 -->
   <filter>
	   <filter-name>jsessionid</filter-name>
	   <filter-class>
	org.jasig.cas.client.authentication.DisableUrlSessionFilter
	   </filter-class>
	</filter>
	<filter-mapping>
	   <filter-name>jsessionid</filter-name>
	   <url-pattern>*.html</url-pattern>
	</filter-mapping>  
	 

	<!--用于单点退出，该过滤器用于实现单点登出功能，可选配置-->
	  <listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>   


	 <!-- 该过滤器用于实现单点登出功能，可选配置。 -->
	   <filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>  

	<!-- 该过滤器负责用户的认证工作，必须启用它 -->
 	  <filter>
		<filter-name>CASFilter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>https://WIN-VUD72JMVS9P:8843/cas/login</param-value>
		</init-param>

		<!-- <init-param>
			<param-name>userType</param-name>
			<param-value>1</param-value>
		</init-param>   -->

		<!-- 系统名称标记 -->
	 	  <init-param>
			<param-name>sysType</param-name>
			<param-value>IntegratedMM</param-value>
		</init-param>

		<init-param>
			<param-name>authorizationFailure</param-name>
			<param-value>https://WIN-VUD72JMVS9P:8843/cas/authorizationFailure.html</param-value>
		</init-param>
		<!-- 这里的server是服务端的IP -->
	 	  <init-param>
			<param-name>serverName</param-name>
			<param-value>http://192.168.3.155:8080</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CASFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>  

	<!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
 	  <filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://WIN-VUD72JMVS9P:8843/cas</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>

			<param-value>http://192.168.3.155:8080</param-value>

		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

	<!-- 该过滤器负责实现HttpServletRequest请求的包裹，
	比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置 -->
	  <filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>  
	
	<!-- 该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
	比如AssertionHolder.getAssertion().getPrincipal().getName()。 -->
 	 <filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping> 
    
  <!-- 单点登录配置结束 -->


	<!--过滤器，用于数据同步-->
	<filter>
		<filter-name>dataSyncFilter</filter-name>
		<filter-class>com.datasync.interceptor.DataSyncFilter</filter-class>
		<init-param>
			<param-name>charset</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>contentType</param-name>
			<param-value>text/html;charset=UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>dataSyncFilter</filter-name>
		<!-- * 代表截获所有的请求  或指定请求/test.do  /xxx.do -->
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<!-- SpringMVC的servlet配置 开始 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/mvc/spring-mvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
	    <servlet-name>InitServlet</servlet-name>
	    <servlet-class>com.znyw.servlet.InitServlet</servlet-class>
	    <load-on-startup>2</load-on-startup>
    </servlet>
  
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<!-- SpringMVC的servlet配置 结束 -->
</web-app>
